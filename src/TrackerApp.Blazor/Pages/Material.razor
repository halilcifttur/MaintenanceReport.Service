@page "/materials"
@using Volo.Abp.Application.Dtos
@using Microsoft.Extensions.Localization
@using TrackerApp.Localization
@using TrackerApp.Dtos;
@inject AbpBlazorMessageLocalizerHelper<TrackerAppResource> LH
@inject IStringLocalizer<TrackerAppResource> L
@inherits AbpCrudPageBase<IMaterialAppService, MaterialDto, Guid, PagedAndSortedResultRequestDto, CreateOrUpdateMaterialDto>

<Card>
    <CardHeader>
        <Row Class="justify-content-between">
            <Column ColumnSize="ColumnSize.IsAuto">
                <h2>@L["Materials"]</h2>
            </Column>
            <Column ColumnSize="ColumnSize.IsAuto">
                <Button Color="Color.Primary"
                        Clicked="OpenCreateModalAsync">
                    @L["NewMaterial"]
                </Button>
            </Column>
        </Row>
    </CardHeader>
    <CardBody>
        <DataGrid TItem="MaterialDto"
                  Data="Entities"
                  ReadData="OnDataGridReadAsync"
                  TotalItems="TotalCount"
                  ShowPager="true"
                  PageSize="PageSize">
            <DataGridColumns>
                <DataGridEntityActionsColumn TItem="MaterialDto" @ref="@EntityActionsColumn">
                    <DisplayTemplate>
                        <EntityActions TItem="MaterialDto" EntityActionsColumn="@EntityActionsColumn">
                            <EntityAction TItem="MaterialDto"
                                          Text="@L["Edit"]"
                                          Clicked="() => OpenEditModalAsync(context)"/>
                            <EntityAction TItem="MaterialDto"
                                          Text="@L["Delete"]"
                                          Clicked="() => DeleteEntityAsync(context)"
                                          ConfirmationMessage="() => GetDeleteConfirmationMessage(context)"/>
                        </EntityActions>
                    </DisplayTemplate>
                </DataGridEntityActionsColumn>
                <DataGridColumn TItem="MaterialDto"
                                Field="@nameof(MaterialDto.Name)"
                                Caption="@L["Name"]">
                </DataGridColumn>
                <DataGridColumn TItem="MaterialDto"
                                Field="@nameof(MaterialDto.SerialNumber)"
                                Caption="@L["SerialNumber"]">
                </DataGridColumn>
                <DataGridColumn TItem="MaterialDto"
                                Field="@nameof(MaterialDto.TenantName)"
                                Caption="@L["TenantName"]">
                </DataGridColumn>
            </DataGridColumns>
        </DataGrid>
    </CardBody>
</Card>

<Modal @ref="@CreateModal">
    <ModalBackdrop/>
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@L["NewMaterial"]</ModalTitle>
                <CloseButton Clicked="CloseCreateModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@CreateValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                        <Field>
                            <FieldLabel>@L["SerialNumber"]</FieldLabel>
                            <TextEdit @bind-Text="@NewEntity.SerialNumber">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Type"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@NewEntity.MaterialType">
                            <SelectItem TValue="Guid" Value="Guid.Empty">@L["PickMaterialType"]</SelectItem>
                            @foreach (var materialType in _materialTypes)
                            {
                                <SelectItem TValue="Guid" Value="@(materialType.Id)">
                                    @(materialType.Name)
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    
                        <Field>
                            <FieldLabel>@L["Yard"]</FieldLabel>
                            <Select TValue="Guid?" @bind-SelectedValue="@NewEntity.TenantId">
                                <SelectItem TValue="Guid?" Value="null">@L["PickTenant"]</SelectItem>
                                @foreach (var tenant in _tenants)
                                {
                                    <SelectItem TValue="Guid" Value="@(tenant.Id)">
                                        @(tenant.Name)
                                    </SelectItem>
                                }
                            </Select>
                        </Field>
                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseCreateModalAsync">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="CreateEntityAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>

<Modal @ref="@EditModal">
    <ModalBackdrop/>
    <ModalContent IsCentered="true">
        <Form>
            <ModalHeader>
                <ModalTitle>@EditingEntity.Name</ModalTitle>
                <CloseButton Clicked="CloseEditModalAsync"/>
            </ModalHeader>
            <ModalBody>
                <Validations @ref="@EditValidationsRef" Model="@NewEntity" ValidateOnLoad="false">
                    <Validation MessageLocalizer="@LH.Localize">
                        <Field>
                            <FieldLabel>@L["Name"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.Name">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                        <Field>
                            <FieldLabel>@L["SerialNumber"]</FieldLabel>
                            <TextEdit @bind-Text="@EditingEntity.SerialNumber">
                                <Feedback>
                                    <ValidationError/>
                                </Feedback>
                            </TextEdit>
                        </Field>
                    </Validation>
                    <Field>
                        <FieldLabel>@L["Type"]</FieldLabel>
                        <Select TValue="Guid" @bind-SelectedValue="@EditingEntity.MaterialType">
                            @foreach (var materialType in _materialTypes)
                            {
                                <SelectItem TValue="Guid" Value="@(materialType.Id)">
                                    @(materialType.Name)
                                </SelectItem>
                            }
                        </Select>
                    </Field>
                    
                        <Field>
                            <FieldLabel>@L["Yard"]</FieldLabel>
                            <Select ReadOnly="true" TValue="Guid?" @bind-SelectedValue="@EditingEntity.TenantId">
                                <SelectItem TValue="Guid?" Value="null">@L["PickTenant"]</SelectItem>
                                @foreach (var tenant in _tenants)
                                {
                                    <SelectItem TValue="Guid" Value="@(tenant.Id)">
                                        @(tenant.Name)
                                    </SelectItem>
                                }
                            </Select>
                        </Field>

                </Validations>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary"
                        Clicked="CloseEditModalAsync">
                    @L["Cancel"]
                </Button>
                <Button Color="Color.Primary"
                        Type="@ButtonType.Submit"
                        PreventDefaultOnSubmit="true"
                        Clicked="UpdateEntityAsync">
                    @L["Save"]
                </Button>
            </ModalFooter>
        </Form>
    </ModalContent>
</Modal>